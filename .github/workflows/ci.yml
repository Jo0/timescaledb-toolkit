name: CI
on:
  pull_request:
  push:
    branches:
    - master
    - staging
    - trying
  schedule:
    # we build at 8am UTC, 3am Eastern, midnight Pacific
    - cron:  '0 8 * * 1-4'
  workflow_dispatch:

jobs:
  test12:
    name: Test PG 12
    runs-on: ubuntu-latest
    container:
      image: timescaledev/rust-pgx:latest
      env:
        CARGO_INCREMENTAL: 0
        CARGO_NET_RETRY: 10
        CI: 1
        RUST_BACKTRACE: short
        RUSTUP_MAX_RETRIES: 10

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: chown Repository
      run: chown -R postgres .

    - name: Cache cargo directories
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-pg12-3
        restore-keys: |
          ${{ runner.os }}-cargo-pg12-2
          ${{ runner.os }}-cargo-pg12

    - name: Cache cargo target dir
      uses: actions/cache@v2
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-pg12-3
        restore-keys: |
          ${{ runner.os }}-cargo-build-target-pg12-2
          ${{ runner.os }}-cargo-build-target-pg12

    - name: Run PG 12 Tests
      run: sudo -HEsu postgres sh -c "/usr/local/cargo/bin/cargo test --workspace --features 'pg12 pg_test'"

    - name: Run post-install tests
      run: |
        sudo -HEsu postgres sh -c "/usr/local/cargo/bin/cargo pgx stop pg12 && /usr/local/cargo/bin/cargo pgx start pg12"
        RUST_BACKTRACE=short cargo run --manifest-path ./tools/post-install/Cargo.toml /home/postgres/.pgx/12.8/pgx-install/bin/pg_config
        cargo run --manifest-path ./tools/testrunner/Cargo.toml -- -h localhost -p 28812

    - name: Run Doc Tests
      run: |
        sudo -HEsu postgres sh -c "/usr/local/cargo/bin/cargo pgx stop pg12 && /usr/local/cargo/bin/cargo pgx start pg12"
        sql-doctester -h localhost -s "CREATE EXTENSION timescaledb; CREATE EXTENSION timescaledb_toolkit; SET SESSION TIMEZONE TO 'UTC'" -p 28812 docs


  test13:
    name: Test PG 13
    runs-on: ubuntu-latest
    container:
      image: timescaledev/rust-pgx:latest
      env:
        CARGO_INCREMENTAL: 0
        CARGO_NET_RETRY: 10
        CI: 1
        RUST_BACKTRACE: short
        RUSTUP_MAX_RETRIES: 10

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: chown Repository
      run: chown -R postgres .

    - name: Cache cargo directories
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-build-target-pg13-3
        restore-keys: |
          ${{ runner.os }}-cargo-build-target-pg13-2
          ${{ runner.os }}-cargo-pg13

    - name: Cache cargo target dir
      uses: actions/cache@v2
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-pg13-3
        restore-keys: |
          ${{ runner.os }}-cargo-build-target-pg13-2
          ${{ runner.os }}-cargo-build-target-pg13

    - name: Run PG 13 Tests
      run: sudo -HEsu postgres sh -c "/usr/local/cargo/bin/cargo test --workspace --features 'pg13 pg_test'"

    - name: Run post-install tests
      run: |
        sudo -HEsu postgres sh -c "/usr/local/cargo/bin/cargo pgx stop pg13 && /usr/local/cargo/bin/cargo pgx start pg13"
        RUST_BACKTRACE=short cargo run --manifest-path ./tools/post-install/Cargo.toml /home/postgres/.pgx/13.4/pgx-install/bin/pg_config
        cargo run --manifest-path ./tools/testrunner/Cargo.toml -- -h localhost -p 28813

    - name: Run Doc Tests
      run: |
        sudo -HEsu postgres sh -c "/usr/local/cargo/bin/cargo pgx stop pg13 && /usr/local/cargo/bin/cargo pgx start pg13"
        sql-doctester -h localhost -s "CREATE EXTENSION timescaledb; CREATE EXTENSION timescaledb_toolkit; SET SESSION TIMEZONE TO 'UTC'" -p 28813 docs

  test14:
    name: Test PG 14
    runs-on: ubuntu-latest
    container:
      image: timescaledev/rust-pgx:latest
      env:
        CARGO_INCREMENTAL: 0
        CARGO_NET_RETRY: 10
        CI: 1
        RUST_BACKTRACE: short
        RUSTUP_MAX_RETRIES: 10

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: chown Repository
      run: chown -R postgres .

    - name: Cache cargo directories
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-build-target-pg14-3
        restore-keys: |
          ${{ runner.os }}-cargo-build-target-pg14-2
          ${{ runner.os }}-cargo-pg14

    - name: Cache cargo target dir
      uses: actions/cache@v2
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-pg14-3
        restore-keys: |
          ${{ runner.os }}-cargo-build-target-pg14-2
          ${{ runner.os }}-cargo-build-target-pg14

    - name: Run PG 14 Tests
      run: sudo -HEsu postgres sh -c "/usr/local/cargo/bin/cargo test --workspace --features 'pg14 pg_test'" --frozen

    - name: Run post-install tests
      run: |
        sudo -HEsu postgres sh -c "/usr/local/cargo/bin/cargo pgx stop pg14 && /usr/local/cargo/bin/cargo pgx start pg14"
        RUST_BACKTRACE=short cargo run --manifest-path ./tools/post-install/Cargo.toml /home/postgres/.pgx/14.0/pgx-install/bin/pg_config
        cargo run --manifest-path ./tools/testrunner/Cargo.toml -- -h localhost -p 28813

    # TODO These require TimescaleDB to support pg14
    # - name: Run Doc Tests
    #   run: |
    #     sudo -HEsu postgres sh -c "/usr/local/cargo/bin/cargo pgx stop pg14 && /usr/local/cargo/bin/cargo pgx start pg14"
    #     sql-doctester -h localhost -s "CREATE EXTENSION timescaledb; CREATE EXTENSION timescaledb_toolkit; SET SESSION TIMEZONE TO 'UTC'" -p 28813 docs